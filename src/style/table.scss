
/* table common */
$table-border: 1px solid #eee;
$td_padding: 12px 0px;


// $함수 값을 확인할때 사용하는 mixin...
@mixin varCheck ($content) {
  position: relative;
  &:after {
    content: $content;
    position: absolute;
    z-index: 9999;
    top: 0; left: 0;
    font-size: 50px;
    width: 200px;
    height: 200px;
    background-color: red;
  }    
}

/* ---------------------  table whole section  --------------------- */
@mixin tableWholeWrap ($subtract, $overflow: none) {
  // $subtract 는 px를 포함해야합니다.
  // overflow-y: $overflow;
  @if $overflow == auto {
    max-height: calc(100vh - #{$subtract});
  }

}

/* ---------------------  table header  --------------------- */
$tableheader_font-size: 13px;
$thead_color: #fff;

// thead
// $position: fixed일 경우 입력 / $align: text-align
@mixin theadStyle ($position: inherit, $align: center) {
  overflow: hidden;
    z-index: 2;
    color: $thead_color;
    line-height: 60px;
    font-size: $tableheader_font-size;
    text-align: $align;
    white-space: nowrap;
    // border-radius: 6px; // => 적용이 안됨..
    >tr {
      th{
        // border-width: 1px 0 1px 0;
        // border-style: solid;
        // border-color: $filter-stroke;
        background-color: $dark-gray;
        // &:first-child {  
        //   border-radius: $radius 0 0 $radius;
        //   // border-width: 1px 0 1px 1px;
        // }
        // &:last-child {  
        //   border-radius: 0 $radius $radius 0;
        //   // border-width: 1px 1px 1px 0;
        // }
      }
    }
    // display: block;

  @if $position == sticky {
    position: sticky;
    margin:0;
    top: -1px;
  }
}

/* --------------------  table body  --------------------- */
$tablebody_font-size: 13px;
$tablebody_color: $light-gray;

// tr
@mixin tbodyTrStyle () {
  // border-bottom: 1px solid #f7f8fb;
  min-height: 60px;
  border: 0;
  text-align: center;
  background-color: transparent;
  &:hover {
    // background-color: $navy;
    // > td:first-child {
    //   border-radius: $radius 0 0 $radius;
    // }
    // > td:last-child {
    //   border-radius: 0 $radius $radius 0;
    // }
  }
}
  
// td
@mixin tbodyTdStyle () {
    padding: $td_padding;
    min-height: 60px;
    text-align: center;
    vertical-align: middle;
    font-size: $tablebody_font-size;
    color: $tablebody_color;
    border: 0;
}

// td.individual_price
@mixin individual_price () {
  background-color: #ccc;
  padding: 5px 0;
  line-height: 1.3;
}

/* --------------------  table.etc  --------------------- */

@mixin noDataRow () {
  border: none;
  line-height: 80px;
 > td {
    text-align: center;
    padding: 0
  }
}

@mixin moreTableData () {
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 60px auto 0 ;
  padding: 0 $gap-m;
  min-width: 150px;
  height: 45px;
  // font-size: 16px;
  border-radius: 22px;
  border: 1px solid $blue-gray;
  background-color: $blue-gray;
  color: $white;
  line-height: 45px;
  transition: .2s ease;
  cursor: pointer;

  > .more-data-count {
    display: flex;
    align-items: center;
    margin-left: 5px;
    color: #c8d5dd;
    > b {
      color: #fff;
    }
    > .mdi-plus {
      margin-top: 3px;
      width: 10px;
      font-weight: bold;
      color: #c8d5dd;
    }
  }

  &:hover {
    background-color: darken($blue-gray, 5%);
  }
}

/* --------------------  etc  --------------------- */
// basic width
$widthList: (
  1: 3%,
  2: 3%,
  3: 9%,
  4: 12%,
  5: 6%,
  6: 10%,
  7: 10%,
  8: 10%,
  9: 10%,
  10: 6%,
  11: 6%,
  12: 6%
);

@mixin setDefaultWidth {
  @each $index, $width in $widthList {
    th:nth-of-type(#{$index}) {
      width: $width
    }
  }
}
