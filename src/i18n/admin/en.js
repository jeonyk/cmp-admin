import PREF from './preference/en'
import ExcelErrORG from './errors/en'
export default {
  ACCOUNT: {
    state: 'Account status',
    manageGrade: 'Management grade',
    perm: 'Authority',
    grade: 'Ranking',
    loginLock: 'Login lock',
    user: 'User account',
    manager: 'Operations manager account',
    email: 'e-mail',
    position: 'Position',
    recent: 'Recent access history',
    limitFileSize: 'Please upload an image file (jpg/png) less than 20Mb.',
    selectAff: 'Select affiliate',
    selectDepart: 'Department selection',
    inactive: 'Inactive',
    inactived: 'Inactive',
    photo: 'Photo',
    affDepart: 'Affiliation Department',
    rejectApproval: 'Rejected approval',
    waitApproval: 'Waiting approval',
    selectRole: 'Role selection',
    addDepart: 'Additional department',
    active: 'Active',
    actived: 'Active',
    resigned: 'Resigned',
    authOtp: 'OTP authentication',
    managerSimple: 'Operations manager',
    topManagerSimple: 'Super Admin',
    operationManager: 'Operation Manager',
    middleManager: 'Middle Manager',
    billingUser: 'Billing User',
    billingManager: 'Billing User',
    generalUser: 'General User',
    customUser: 'Custom User',
    partenrs: 'Partners',
    multiUser: 'Multi User',
    selectTransferUser: 'Select the user to be transferred.',
    noAdditionalDepart: 'There are no additional departments.',
    selectAdditionalDepart: 'Please select the department you want to add.',
    applyDate: 'Apply Date (Status)',
    regDate: 'Registion Date(Last Login Date)',
    upload: 'Upload',
    deletePhoto: 'Delete Photo'
  },
  // 로깅
  LOGGING: {
    linkInterworking: 'Link Interworking',
    dataInterworking: 'Data Interworking',
    testConnectivity: 'Test Connectivity',
    linkageTest: 'Linkage Test',
    ALERT: {
      '001': 'Testing logging server connection.',
      '002': 'A logging server of {type} type already exists.',
      '003': 'Connection failed.',
      '004': 'Task request failed.',
      '005': 'Please enter the user name to authenticate.',
      '006': 'Please enter the user password to authenticate.'
    }
  },
  // 모니터링
  MONIT: {
    setMonitoring: 'Set Monitoring',
    setMonitorThreshold: 'Monitoring Threshold',
    setMonitoringServer: 'Set Monitoring Server',
    setMonitorEc2Threshold: 'EC2 Monitoring Threshold',
    setMonitorEbsThreshold: 'EBS Monitoring Threshold',
    THRESHOLD: {
      Nutanix: {
        controllerAvgIoLatencyThreshold: 'Controller average I/O latency(ms)',
        controllerIoBandwidthThreshold: 'Controller average I/O bandwidth(IOPS)',
        controllerIopsThreshold: 'Controller IOPS(IOPS)',
        cpuThreshold: 'CPU utilization(%)',
        diskThreshold: 'Disk utilization(%)',
        memoryThreshold: 'Memory untilization(%)'
      },
      AWS: {
        EC2: {
          cpuUtilization: 'CPU Utilization(%)',
          createDate: 'Created Date',
          diskReadBytes: 'Disk Read(Byte)',
          diskReadOps: 'Disk Read Operation(EA)',
          diskWriteBytes: 'Disk Write(Byte)',
          diskWriteOps: 'Disk Write Operation(EA)',
          modifyDate: 'Modified Date',
          networkIn: 'Network In(Byte)',
          networkOut: 'Network out(Byte)',
          networkPacketIn: 'Network Packet In(EA)',
          networkPacketOut: 'Network Packet Out(EA)',
          statusCheckFailed: 'Status Check Failed(ALL)(EA)',
          statusCheckFailedInstance: 'Status Check Failed(Instance)(EA)',
          statusCheckFailedSystem: 'Status Check Failed(System)(EA)'
        },
        EBS: {
          readBandwidth: 'Read Bandwidth (KiB/s)',
          writeBandwidth: 'Write Bandwidth (KiB/s)',
          readIops: 'Read IOPS (Ops/s)',
          writeIops: 'Write IOPS (Ops/s)',
          queueLength: 'Average Queue Length (Operation)',
          timeSpentIdle: 'Time Spent Idle(%)',
          avgReadBytes: 'Average Read Bytes (Kib/op)',
          avgWriteBytes: 'Average Write Bytes (Kib/op)',
          avgReadTime: 'Average Read Time (ms/op)',
          avgWriteTime: 'Average Write Time (ms/op)',
          burstBalance: 'Burst Balance(%)'
        }
      },
      VMW: {
        storageThreshold: 'Storage Utilization(%)',
        storageTotal: 'Storage Total Size',
        storageUse: 'Storage Utilization',
        VmwMonit1: 'CPU Usage Average',
        VmwMonit2: 'Memory Host Consumed % Average',
        VmwMonit3: 'Disk Usage Average',
        VmwMonit4: 'Disk Highest Latency Latest',
        VmwMonit5: 'Network Usage Average',
        VmwMoniSummary1: 'CPU usage as a percentage during the interval.',
        VmwMoniSummary2: 'Percentage of host physical memory that has been consumed.',
        VmwMoniSummary3: 'Aggregated disk I/O rate. For hosts, this metric includes the rates for all virtual machines running on the host during the collection interval.',
        VmwMoniSummary4: 'Highest latency value across all disks used by the host.',
        VmwMoniSummary5: 'Network utilization (combined transmit-rates and receive-rates) during the interval.'

      }
    }
  },
  // 조직 관련
  // NOTE 조직계정 엑셀 업로드
  ExcelErrORG,
  ORG: {
    modalTitle: 'Uploading and  Inspection Excel Files',
    sheet: 'Sheet',
    errorMessage: 'Error Message',
    errorRowNumber: 'Error Rows Number',
    runnginTask: 'Task Running',
    newExcelORG: 'Download the latest file',
    excelupORG: 'Upload Organization-Account Excel',
    noDataExcel: '* If there is no data, the Excel form is downloaded.',
    accInfo: '{name} information',
    allowProject: 'Project assigned to {name}',
    affOrgCount: 'Affiliates-Organization (Number of Projects)',
    selectAffOrg: 'Select Company > Group.',
    companyName: 'Company Name',
    companyCiName: 'Company CI Name',
    companyPrefix: 'Company Prefix',
    affName: 'Name of affiliate',
    affCode: 'Company Code',
    orgCode: 'Organization Code',
    affCiName: 'CI name of affiliated company',
    manageAffOrg: 'Affiliates, organization management',
    transferOrg: 'Transfer destination organization',
    selectTransferProject: 'Select the project to be transferred.',
    orgAcc: 'Organization-account',
    orgProject: 'Organization-project',
    projectInfo: 'Project information',
    allowProjectInfo: 'Assignment project information',
    domain: 'Domain',
    regDomain: 'Regist domain',
    main: 'Main',
    sub: 'Sub',
    operManager: 'Operation manager',
    countPerson: 'people',
    affInfo: 'Affiliate Information',
    accInfoRaw: 'Account Information',
    onlyNameOfCI: 'CI Name',
    manager: 'Manager',
    registPrefixAndCI: 'Please register the affiliate prefix and CI.',
    registPrefix: 'Please register the affiliate prefix.',
    registCI: 'Please register the affiliate CI name.',
    inputPrefix: 'Input Prefix',
    inputCi: 'Input CI Name',
    PLACEHOLDER: {
      regMail: 'Please register the domain to be used for e-mail registration.',
      enterInclude: 'Enter including {item}',
      regMiddleManager: 'Please register as a middle manager.',
      regOperManager: 'Please register as a operation manager.',
      noManager: 'No assignee'
    },
    BTN: {
      setMiddleManager: 'Set Middle Manager',
      regMiddleManager: 'Enroll middle manager',
      setOperManager: 'Set Operation Manager',
      regOperManager: 'Enroll operation manager',
      changeOperManager: 'Change operation manager'
    }
  },
  ROLE: {
    position: 'Position',
    perm: 'Authority',
    awsPerm: 'AWS Permissions',
    nxPerm: 'Nutanix Permissions',
    setPerm: 'Set permissions',
    chargeAff: 'Affiliates in charge',
    contact: 'Contact person (name / organization)',
    contactSimple: 'Contact person',
    lastModDate: 'Date of last modification',
    menu: 'menu',
    viewPerm: 'View permission',
    jobRole: 'Job role',
    role: 'role',
    totalWork: 'Total work (number of roles)',
    chargeRole: 'Role in charge',
    userVisible: 'User exposure'
  },
  NOTI: {
    searchWord: 'Search word',
    post: 'Posting',
    postState: 'Publishing status',
    postDate: 'Estimated time to be posted',
    postNotice:
      'If you set the scheduled time for posting,<br>Notices registered at that time will be displayed on the user page.',
    customerInfo: 'Customer information',
    regNotice: 'Announcement registration',
    date: 'date',
    content: 'Contents',
    waitAnswer: 'Waiting for an answer',
    stateAnswer: 'Status',
    completeAnswer: 'Answer complete',
    reply: 'Reply',
    answer: 'Answerer',
    regDate: 'Date',
    inqContent: 'Content of inquiry',
    inqType: 'Inquiry type',
    number: 'Number',
    unPost: 'Unpublished',
    nonMember: 'Non-members',
    state: 'State',
    title: 'Title',
    question: 'Question (title)',
    que: 'Question',
    category: 'Category',
    fileList: 'File list',
    keywordSearch: 'Search(Keywords)',
    keywordSearchPlacehold: 'Enter keywords',
    member: 'member',
    memberClass: 'Member class',
    phone: 'Mobile phone (contact)',
    receipt: 'Receipt',
    checking: 'Checking',
    isPostSelect: 'Choose whether to publish',
    enterQuestionTitle: 'Please enter a title for your question.',
    answerContent: 'Answer content',
    unClassified: 'Unclassified',
    employeeNumber: 'Employee Number',
    newUpload: 'Upload new'
  },
  WF: {
    execPerm: 'Execution authority',
    task: 'Task',
    check: 'Checklist',
    priorCheck: 'Prior checklist',
    postCheck: 'Post check',
    editCheck: 'Edit Checklist',
    server: 'server',
    network: 'network',
    security: 'security',
    securityInfra: 'Security infrastructure',
    role: 'Role',
    dragInfo: 'Drag and drop the checklist.',
    dragInfoTask: 'Drag and drop tasks.',
    text: 'Text',
    radio: 'Radio Button',
    checkBox: 'Check Box',
    dropdown: 'Dropdown',
    input: 'Input Box'
  },
  TEMPLATE: {
    createTime: 'Create Date',
    add_auth_template: 'Add Authority Template',

    ALERT: {
      '001': 'Please enter the template name.',
      '002': 'There is an Authority with the same name.',
      '003': 'A problem occurred while deleting. Please try again',
      '004': 'A problem occured while registering.',
      '005': 'Read permission is automatically granted when Create, Update, and Delete permission is granted.<br>In addition, when Read permission is released, Create, Update, and Delete permission<br>is automatically released.'
    },
    PLACEHOLDER: {
      '001': 'Enter Authority name'
    }
  },
  PREF,
  NEWS: {
    create: 'Create news',
    thumbnailUpload: 'Upload thumbnail',
    post: 'Publish status',
    title: 'Title',
    number: 'Number',
    createdDate: 'Created date'
  },
  AUDIT: {
    searchWord: 'Search word',
    searchDate: 'Search date'
  },
  JDBC: {
    plzSelectDbType: 'DB type selection',
    empTableName: 'Please select the DB type.',
    selectDbType: 'User table name',
    enterEmpTableName: 'Please enter the user table name.',
    groupTableName: 'Organization table name',
    enterGroupTableName: 'Please enter the organization table name.',
    tableName: 'Table name',
    colInfo: 'Column Description',
    colName: 'Column Name',
    colType: 'Column Type',
    sync: 'Synchronize ?',
    enterColName: 'Please fill in {name} column names.',
    empTable: 'User table',
    groupTable: 'Organization table',
    empTableInfo: 'User table information',
    groupTableInfo: 'Organization Table Information',
    companyCode: 'Company code',
    companyName: 'Company name',
    empNo: 'Employee number',
    empName: 'Employee name',
    dutyCode: 'Duty code',
    dutyName: 'Duty Name',
    orgCode: 'Organization code',
    orgName: 'Organization name',
    modDate: 'Modified time',
    empEmail: 'Employee email',
    empPhone: 'Employee phone number',
    superOrgCode: 'Top organization name',
    seq: 'Organizational priorities',
    shortName: 'Organization name (short)',
    CFG014: 'The column name is invalid. Please check again.',
    CFG015: 'User table name is invalid. Please check again.',
    CFG019: 'Organization table name is invalid. Please check again.',
    CFG017: 'There is a duplicate column name. Please check again.',
    CFG020: 'Please check your ID.',
    checkDbType: 'Please check the DB type again.'
  }
}
